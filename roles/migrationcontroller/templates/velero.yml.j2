---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: velero
  namespace: {{ mig_manager_namespace }}
  labels:
    component: velero
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: velero
  labels:
    component: velero
subjects:
  - kind: ServiceAccount
    namespace: {{ mig_manager_namespace }}
    name: velero
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
allowHostDirVolumePlugin: true
allowHostIPC: true
allowHostNetwork: true
allowHostPID: true
allowHostPorts: true
allowPrivilegeEscalation: true
allowPrivilegedContainer: true
allowedCapabilities:
- '*'
allowedUnsafeSysctls:
- '*'
apiVersion: security.openshift.io/v1
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
kind: SecurityContextConstraints
metadata:
  annotations:
    kubernetes.io/description: 'privileged allows access to all privileged and host
      features and the ability to run as any user, any group, any fsGroup, and with
      any SELinux context.  WARNING: this is the most relaxed SCC and should be used
      only for cluster administration. Grant with caution.'
  creationTimestamp: null
  generation: 1
  name: velero-privileged
priority: null
readOnlyRootFilesystem: false
requiredDropCapabilities: null
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
seccompProfiles:
- '*'
supplementalGroups:
  type: RunAsAny
users:
- system:admin
- system:serviceaccount:{{ mig_manager_namespace }}:velero
volumes:
- '*'
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  namespace: {{ mig_manager_namespace }}
  name: velero
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: velero
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8085"
        prometheus.io/path: "/metrics"
    spec:
      restartPolicy: Always
      serviceAccountName: velero
      containers:
        - name: velero
          image: {{ velero_image }}
          ports:
            - name: metrics
              containerPort: 8085
          command:
            - /velero
          args:
            - server
          volumeMounts:
            - name: {{ velero_aws_secret_name }}
              mountPath: /credentials
            - name: plugins
              mountPath: /plugins
            - name: scratch
              mountPath: /scratch
          env:
            - name: AWS_SHARED_CREDENTIALS_FILE
              value: /credentials/cloud
            - name: VELERO_NAMESPACE
              value: {{ mig_manager_namespace }}
            - name: VELERO_SCRATCH_DIR
              value: /scratch
      volumes:
        - name: {{ velero_aws_secret_name }}
          secret:
            secretName: {{ velero_aws_secret_name }}
        - name: plugins
          emptyDir: {}
        - name: scratch
          emptyDir: {}
      initContainers:
        - image: {{ velero_plugin_image }}
          imagePullPolicy: Always
          name: velero-plugin
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /target
            name: plugins
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: restic
  namespace: {{ mig_manager_namespace }}
spec:
  selector:
    matchLabels:
      name: restic
  template:
    metadata:
      labels:
        name: restic
    spec:
      serviceAccountName: velero
      securityContext:
        runAsUser: 0
      volumes:
        - name: {{ velero_aws_secret_name }}
          secret:
            secretName: {{ velero_aws_secret_name }}
        - name: host-pods
          hostPath:
            path: {{ restic_pv_host_path }}
        - name: scratch
          emptyDir: {}
      containers:
        - name: velero
          securityContext:
            privileged: true
          image: {{ velero_image }}
          command:
            - /velero
          args:
            - restic
            - server
          volumeMounts:
            - name: {{ velero_aws_secret_name }}
              mountPath: /credentials
            - name: host-pods
              mountPath: /host_pods
              mountPropagation: HostToContainer
            - name: scratch
              mountPath: /scratch
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: VELERO_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: AWS_SHARED_CREDENTIALS_FILE
              value: /credentials/cloud
            - name: VELERO_SCRATCH_DIR
              value: /scratch

